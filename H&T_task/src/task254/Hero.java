package task254;

// public class クラス名A extends クラス名B としたとき、
// クラスAはクラスBの「派生クラス」となる (上位互換と言えばイメージしやすいか) .
// 同時に、クラスBはクラスAの「基底クラス」となる.
public class Hero extends Character {
        // フィールド.
        // 基底クラスでprotected (またはpublic) だったフィールドは、
        // 派生クラスでも参照できるため、再度宣言する必要はない.
        // ---------------------------------------------------------------------
        // コンストラクタ.
        // 基底クラスのコンストラクタの処理を呼び出す場合、
        // super(引数) と記述する.
        /**
         * キャラクター(職業：勇者(職業？))を作成します.
         * @param name キャラクターの名前
         */
        public Hero(String name) {
                super(name, 100);
        }
        // ---------------------------------------------------------------------
        // メソッド.
        // 基底クラスにabstractなメソッドがあった場合、
        // 派生クラスで処理の本体を実装する必要がある.
        /**
         * 勇者のスキルを発動します.
         */
        @Override
        public void useSkill() {
                // 無能
                // _nameは基底クラスでprotectedだったので、派生クラスでも参照可能
                System.out.println(_name + "はスキルを覚えていない！");
        }
        // 基底クラスでabstractでなく、
        // 派生クラスでも同じ処理となるメソッドは、再度実装する必要はない.
}
